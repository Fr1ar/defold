#! /usr/bin/env python
from waf_dynamo import apidoc_extract_task
import waflib.Options

def configure(conf):
    pass

def build(bld):
    embed_source = ''

    source = 'profiler.cpp profile_render.cpp'
    source_null = 'profiler_null.cpp'

    if 'macos' in bld.env.PLATFORM:
        source += ' profiler_cocoa.mm'
    elif 'android' in bld.env.PLATFORM or 'linux' in bld.env.PLATFORM:
        source += ' profiler_linux.cpp'
    elif 'win32' in bld.env.PLATFORM:
        source += ' profiler_win32.cpp'
    else:
        source += ' profiler_unsupported.cpp'

    profiler = bld.stlib(features = 'cxx',
                            includes = '.',
                            source = source,
                            target = 'profilerext')

    profiler = bld.stlib(features = 'cxx',
                            includes = '.',
                            source = source_null,
                            target = 'profilerext_null')

    bld.install_files('${PREFIX}/include/profiler', 'profiler.h')

    apidoc_extract_task(bld, ['profiler.cpp'])

    if not waflib.Options.options.skip_build_tests:
        bld.recurse('test')
